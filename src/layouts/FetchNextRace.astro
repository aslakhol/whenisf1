---
import type monza from "../monza.json";
import PreSeasonMain from "../views/PreSeasonMain.astro";
import Main from "../views/Main.astro";

type DataType = typeof monza;

type SessionKey =
  | "FirstPractice"
  | "SecondPractice"
  | "ThirdPractice"
  | "Qualifying"
  | "Sprint"
  | undefined;

export interface Props {
  session: string;
  sessionKey?: SessionKey;
}

const { session, sessionKey } = Astro.props;

const data: DataType = await fetch(
  "http://ergast.com/api/f1/current/next.json"
).then((res) => res.json());

const isSprint =
  data.MRData.RaceTable.Races[0] && "Sprint" in data.MRData.RaceTable.Races[0];

let key: SessionKey = sessionKey;

if (isSprint && sessionKey === "ThirdPractice") {
  key = "Sprint";
}

if (!isSprint && sessionKey === "Sprint") {
  key = "ThirdPractice";
}

const circuit =
  data.MRData.RaceTable.Races[0]?.Circuit.Location.locality || "unknown";

const race =
  key && data.MRData.RaceTable.Races[0]
    ? data.MRData.RaceTable.Races[0][key]
    : data.MRData.RaceTable.Races[0];

const preSeason =
  data.MRData.RaceTable.Races.length < 1 || race.time === undefined;

const goTime = race
  ? new Date(`${race.date}T${race.time ?? "15:00:00"}`)
  : new Date(Date.UTC(2024, 2, 2, 15, 0, 0)); // 2nd March 2024, 15:00 UTC, the planned start of the 2024 season
---

{
  preSeason ? (
    <PreSeasonMain goTime={goTime} />
  ) : (
    <Main
      session={session}
      goTime={goTime}
      circuit={circuit}
      isSprint={isSprint}
    />
  )
}
